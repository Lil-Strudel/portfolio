---

---

<div class="bg-backgroundDark rounded-lg p-8 w-[450px]">
  <p id="code" class="font-serif"></p>
</div>
<script>
  const parts = [
    {
      text: "Happy ",
      color: "darkPurple",
      italic: true,
    },
    {
      text: "new ",
      color: "blue",
      bold: true,
    },
    {
      text: "year ",
      color: "cyan",
    },
  ];

  const partLengthCounts = parts.reduce<number[]>((acc, part, index) => {
    let prev = 0;
    if (index > 0) {
      const newPrev = acc[index - 1];
      if (newPrev) prev = newPrev;
    }

    acc.push(part.text.length + prev);
    return acc;
  }, []);

  const completeString = parts.map((part) => part.text).join("");

  function getText(charCount: number) {
    let currentString = "";

    const chunkCount =
      partLengthCounts.findIndex((partLength) => partLength >= charCount) + 1;

    for (let i = 0; i < chunkCount; i++) {
      const part = parts[i];
      if (!part) throw new Error("Part not found");

      const text =
        i === chunkCount - 1
          ? part.text.slice(0, charCount - (partLengthCounts[i - 1] ?? 0))
          : part.text;

      currentString += `<span class="text-${part.color}${
        part.bold ? " font-bold" : ""
      }${part.italic ? " italic" : ""}">${text}</span>`;
    }

    return currentString;
  }

  const codeElement = document.getElementById("code");
  if (!codeElement) {
    throw new Error("Code element not found");
  }

  await new Promise((resolve) => setTimeout(resolve, 3000));

  for (let i = 0; i < completeString.length; i++) {
    codeElement.innerHTML = getText(i + 1);
    await new Promise((resolve) => setTimeout(resolve, 100));
  }
</script>
